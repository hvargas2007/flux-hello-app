name: Docker image build and publish

on:
  push:
    branches: [ "main" ]
    paths:
      - app/**
      - .github/workflows/build-push-and-update.yaml

permissions:
  id-token: write
  contents: write

env:
  IMAGE_NAME: hello-app
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "540551285630"
  OIDC_ROLE_NAME: "github-actions-ecr-full-access"
  DOCKERFILE_PATH: "app/"
  K8S_MANIFESTS_PATH: "k8s_manifest/"

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.DOCKERFILE_PATH }}
    outputs:
      IMAGE_URI: ${{ steps.build-push.outputs.image_uri }}

    steps:
      - name: Pull source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        id: awscreds
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.OIDC_ROLE_NAME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create ECR Repository
        id: ecr-create
        run: |
          aws ecr describe-repositories --repository-names ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-push
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: v${{ github.run_number }}
        run: |
          docker build . -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> "$GITHUB_OUTPUT"

  update-k8s-manifest:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: Pull source code
        uses: actions/checkout@v4

      - name: Update the Kubernetes manifest with the new image URI
        env:
          IMAGE_URI: ${{needs.docker-build-and-push.outputs.IMAGE_URI}}
        run: |
          cd ${{ env.K8S_MANIFESTS_PATH }}
          kustomize edit set image jmanzur/hello-app:latest=$IMAGE_URI

      - name: Push the updated Kubernetes manifest to the repository
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Update image URI to v${{ github.run_number }}"
            git push
          else
            echo "No changes detected, skipping git add, git commit, and git push"
            exit 0
          fi